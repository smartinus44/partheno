{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./src/Bookmark.class.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","obj","default","_defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","instance","TypeError","BookMark","build","_classCallCheck2","this","uniqueId","patterns","height","width","chamfer","chamferWidth","chamferRt","chamferRb","chamferLt","chamferLb","roundBorder","roundBorderWidth","roundBorderRt","roundBorderRb","roundBorderLt","roundBorderLb","enableTriangles","numberOfPairOfTriangles","numberOfpairs","showStrokes","columnsPerWidth","canDownload","backgroundPattern","background","evenPattern","triangleEvenPattern","_getRandomPattern","oddPattern","triangleOddPattern","images","wrapper","_init","_createCanvasWrapper","zone","_initPatterns","result","Math","floor","random","_getFullDecodedPath","data","_roundBorderRt","_roundBorderRb","_roundBorderLt","_roundBorderLb","path","btoa","stringPattern","atob","searchedPattern","pattern","map","elem","title","_hasChamfer","_drawChamferedRect","el_canvas","Array","isArray","_buidMirroredPattern","_applyStyle","el_ctx","fill","_findPattern","fillRect","_this","strokeRect","pow","parseFloat","forEach","index","currentImage","drawImage","x","y","w","h","radius","rt","lt","rb","lb","b","beginPath","strokeStyle","lineWidth","moveTo","lineTo","quadraticCurveTo","stroke","elementId","zoneId","_this2","_zone","document","createElement","id","className","_canvas","_roundBorder","backgroundPatternTriangleEven","backgroundPatternTriangleOdd","innerHTML","setTimeout","clearCanvasLayers","appendChild","getContext","_canDownload","_createDownloadLink","_createDetailLink","clientWidth","clientHeight","clearRect","filteredFull","push","filter","_this3","filteredPatterns","getFiltered","_imagesLoading","ss_pattern","ss_image","Image","ss_elpattern","onload","repeatBackgroundWidth","repeatBackgroundHeight","src","_encode","_triggeredOnPattersLoaded","image","elpattern","createPattern","_triggeredOnPatternsLoaded","getElementById","_link","type","innerText","addEventListener","$","modal","insertBefore","firstChild","_this4","classList","href","role","toDataURL","download","params","cols","rows","readOnly","JSON","stringify","_setBackgroundPatterns","style","fillStyle","isEven","_this5","triangles","_column_width","_offset","_first_coef","_second_coef","_triangle_height","clip","_half_width","j","_third_coef","k","_drawSingleTriangle","closePath","_drawStrokes","restore","_canDisplayStrokes","_this6","_drawBackgroundPattern","_canDrawTriangle","_drawTriangles","loadedPattern","render","Builder","_createClass2"],"mappings":"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","file":"partheno.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","'use strict';\n\nconst STROKE_COLOR = \"#FF0000\";\nconst LINE_WIDTH = 1;\nconst DEBUG = true; // Enable logging\n\nconst log = (elem) => {\n    if (DEBUG) {\n        console.log(elem);\n    }\n};\n\n// Initialization of a bookmark.\nexport default class BookMark {\n\n    /**\n     * Constructor.\n     * @param {number} _uniqueId\n     * @returns {BookMark}\n     */\n    constructor(build) {\n\n        this.uniqueId = build.uniqueId;\n        this.patterns = build.patterns;\n        this.height = build.height;\n        this.width = build.width;\n        this.chamfer = build.chamferWidth;\n        this.chamferRt = build.chamferRt;\n        this.chamferRb = build.chamferRb;\n        this.chamferLt = build.chamferLt;\n        this.chamferLb = build.chamferLb;\n        this.roundBorder = build.roundBorderWidth;\n        this.roundBorderRt = build.roundBorderRt;\n        this.roundBorderRb = build.roundBorderRb;\n        this.roundBorderLt = build.roundBorderLt;\n        this.roundBorderLb = build.roundBorderLb;\n        this.enableTriangles = build.enableTriangles;\n        this.numberOfPairOfTriangles = build.numberOfpairs;\n        this.showStrokes = build.showStrokes;\n        this.columnsPerWidth = build.columnsPerWidth;\n        this.canDownload = build.canDownload;\n        this.backgroundPattern = build.background;\n\n        if (!build.evenPattern) {\n            this.triangleEvenPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleEvenPattern = build.evenPattern;\n        }\n\n        if (!build.oddPattern) {\n            this.triangleOddPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleOddPattern = build.oddPattern;\n        }\n\n        this.images = [];\n        this.wrapper = null;\n\n        this._init();\n    }\n\n    static get Builder() {\n        class Builder {\n            /**\n             * @param {number} uniqueId \n             */\n            constructor(uniqueId) {\n                    this.uniqueId = uniqueId;\n                }\n                /**\n                 * @param {number} height \n                 * @param {number} width \n                 */\n            sized(height, width) {\n                    this.height = height;\n                    this.width = width;\n                    return this;\n                }\n                /**\n                 * @param {number} columnsPerWidth \n                 */\n            columnsPerWidth(columnsPerWidth) {\n                    this.columnsPerWidth = columnsPerWidth;\n                    return this;\n                }\n                /**\n                 * @param {boolean} canDownload \n                 */\n            downloadable(canDownload) {\n                    this.canDownload = canDownload;\n                    return this;\n                }\n                /**\n                 * @param {boolean} canDownload \n                 */\n            withStrokes(showStrokes) {\n                    this.showStrokes = showStrokes;\n                    return this;\n                }\n                /**\n                 * @param {string} background \n                 */\n            withBackground(background) {\n                    this.background = background;\n                    return this;\n                }\n                /**\n                 * @param {number} numberOfpairs \n                 */\n            withNumberOfPairs(numberOfpairs) {\n                    this.numberOfpairs = numberOfpairs;\n                    return this;\n                }\n                /**\n                 * @param {number} numberOfpairs \n                 */\n            withTriangles(enableTriangles) {\n                    this.enableTriangles = enableTriangles;\n                    return this;\n                }\n                /**\n                 * @param {Object} patterns \n                 * @param {string} evenPattern \n                 * @param {string} oddPattern \n                 */\n            withPatterns(patterns, evenPattern, oddPattern) {\n                    this.patterns = patterns;\n                    this.evenPattern = evenPattern;\n                    this.oddPattern = oddPattern;\n                    return this;\n                }\n                /**\n                 * @param {number} chamferWidth \n                 * @param {boolean} chamferRt \n                 * @param {boolean} chamferRb \n                 * @param {boolean} chamferLt \n                 * @param {boolean} chamferLb \n                 */\n            withChamfers(chamferWidth, chamferRt, chamferRb, chamferLt, chamferLb) {\n                    this.chamferWidth = chamferWidth;\n                    this.chamferRt = chamferRt;\n                    this.chamferRb = chamferRb;\n                    this.chamferLt = chamferLt;\n                    this.chamferLb = chamferLb;\n                    return this;\n                }\n                /**\n                 * @param {number} roundBorderWidth \n                 * @param {boolean} roundBorderRt \n                 * @param {boolean} roundBorderRb \n                 * @param {boolean} roundBorderLt \n                 * @param {boolean} roundBorderLb \n                 */\n            withRoundBorder(roundBorderWidth, roundBorderRt, roundBorderRb, roundBorderLt, roundBorderLb) {\n                this.roundBorderWidth = roundBorderWidth;\n                this.roundBorderRt = roundBorderRt;\n                this.roundBorderRb = roundBorderRb;\n                this.roundBorderLt = roundBorderLt;\n                this.roundBorderLb = roundBorderLb;\n                return this;\n            }\n\n            build() {\n                return new BookMark(this);\n            }\n        }\n        return Builder;\n    }\n\n    /**\n     * First init canvas and ctx.\n     * @private\n     */\n    _init() {\n        this._createCanvasWrapper('canva-' + this.uniqueId, 'zone-' + this.uniqueId);\n        this.zone = 'background';\n        this._initPatterns();\n        this.zone = 'triangles';\n        this._initPatterns();\n    }\n\n    /**\n     * Randomly returns a pattern.\n     * @param {string} zone\n     * @returns {string|null}\n     * @private\n     */\n    _getRandomPattern(zone) {\n        let result, value;\n        if (typeof this.patterns[zone] !== 'undefined') {\n            value = Math.floor(Math.random() * this.patterns[zone].length);\n            result = this._getFullDecodedPath(this.patterns[zone][value].data);\n        }\n        return result;\n    }\n\n    /**\n     * Return true if at least one chamfer is enabled.\n     * @returns {boolean}\n     * @private\n     */\n    _hasChamfer() {\n        return (this.chamferRt || this.chamferRb || this.chamferLt || this.chamferLb);\n    }\n\n    /**\n     * Return true if at least one round border is enabled.\n     * @returns {boolean}\n     * @private\n     */\n    _hasRoundBorder() {\n        return (this._roundBorderRt || this._roundBorderRb || this._roundBorderLt || this._roundBorderLb);\n    }\n\n    /**\n     * Return clean full path of a pattern.\n     * @param {string} path\n     * @returns {string}\n     * @private\n     */\n    _getFullDecodedPath(path) {\n        return btoa(this.patterns.path + path);\n    }\n\n    /**\n     * Encode a string.\n     * @param {string} stringPattern \n     */\n    _encode(stringPattern) {\n        return atob(stringPattern);\n    }\n\n    /**\n     * Find a pattern in a list of patterns.\n     * @param {string} searchedPattern\n     * @return {string}\n     * @private\n     */\n    _findPattern(searchedPattern) {\n        let pattern;\n        this.patterns.background.map((elem) => {\n            if (elem.title === searchedPattern) {\n                pattern = elem.data;\n            }\n        });\n        return pattern;\n    }\n\n    /**\n     * Initialize the background.\n     * @param {string|Array} backgroundPattern\n     * @private\n     */\n    _setBackgroundPatterns(backgroundPattern) {\n        if (this._hasChamfer()) {\n            this._drawChamferedRect(\n                0,\n                0,\n                this.el_canvas.width,\n                this.el_canvas.height,\n                this.chamfer,\n                this.chamferRt,\n                this.chamferRb,\n                this.chamferLt,\n                this.chamferLb\n            );\n\n            // If the pattern is compouned of a couple of faces.\n            if (Array.isArray(backgroundPattern)) {\n                this._buidMirroredPattern(backgroundPattern);\n            } else {\n                this._applyStyle(this.images[backgroundPattern]);\n            }\n            this.el_ctx.fill();\n        } else {\n            let pattern = this._findPattern(backgroundPattern);\n\n            // Patterns could be stored in an array or in a single string because of mirrored patterns.\n            if (Array.isArray(pattern)) {\n                this._buidMirroredPattern(pattern);\n                this.el_ctx.fill();\n            } else {\n                this._applyStyle(this.images[this._getFullDecodedPath(pattern)]);\n                this.el_ctx.fillRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n            }\n        }\n    }\n\n    /**\n     * Build a mirrored background pattern.\n     * @param {Object} patterns\n     * @private\n     */\n    _buidMirroredPattern(patterns) {\n        // Black background\n        this.el_ctx.strokeRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n\n        let pow = parseFloat(this.el_canvas.width / 2);\n        let width = this.width;\n        let height = this.height;\n\n        patterns.forEach((pattern, index) => {\n            let currentImage = this.images[this._getFullDecodedPath(pattern)];\n            if (currentImage) {\n                // Top left.\n                if (index === 0) {\n                    this.el_ctx.drawImage(currentImage, 0, 0, width, height);\n                }\n                // Top right.\n                if (index === 1) {\n                    this.el_ctx.drawImage(currentImage, pow, 0, width, height);\n                }\n                // Bottom left.\n                if (index === 2) {\n                    this.el_ctx.drawImage(currentImage, 0, 200, width, height);\n                }\n                // Bottom right.\n                if (index === 3) {\n                    this.el_ctx.drawImage(currentImage, pow, 200, width, height);\n                }\n            }\n        });\n    }\n\n    /**\n     * Build a rounded background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _drawRoundedRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n        this.el_ctx.beginPath();\n        this.el_ctx.strokeStyle = \"green\";\n        this.el_ctx.lineWidth = \"2\";\n\n        if (rt) {\n            if (lt) {\n                this.el_ctx.moveTo(x, y);\n            } else {\n                this.el_ctx.moveTo(x + radius, y);\n            }\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.quadraticCurveTo(r, y, r, y + radius);\n        } else {\n            if (lb) {\n                this.el_ctx.moveTo(x + radius, y);\n            } else {\n                this.el_ctx.moveTo(x, y);\n\n            }\n            this.el_ctx.lineTo(r, y);\n        }\n\n        if (rb) {\n            this.el_ctx.lineTo(r, y + h - radius);\n            this.el_ctx.quadraticCurveTo(r, b, r - radius, b);\n        } else {\n            this.el_ctx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.el_ctx.lineTo(x + radius, b);\n            this.el_ctx.quadraticCurveTo(x, b, x, b - radius);\n        } else {\n            this.el_ctx.lineTo(x, b);\n        }\n\n        if (lb) {\n            this.el_ctx.lineTo(x, y + radius);\n            this.el_ctx.quadraticCurveTo(x, y, x + radius, y);\n        } else {\n            this.el_ctx.lineTo(x, y);\n        }\n        this.el_ctx.stroke();\n    }\n\n    /**\n     * Build a chamfered background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _drawChamferedRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n        this.el_ctx.moveTo(x + radius, y);\n        if (rt) {\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.lineTo(r, y + radius);\n        } else {\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.lineTo(r, y);\n        }\n\n        if (lb) {\n            this.el_ctx.lineTo(r, y + h - radius);\n            this.el_ctx.lineTo(r - radius, b);\n        } else {\n            this.el_ctx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.el_ctx.lineTo(x + radius, b);\n            this.el_ctx.lineTo(x, b - radius);\n        } else {\n            this.el_ctx.lineTo(x, b);\n        }\n\n        if (rb) {\n            this.el_ctx.lineTo(x, y + radius);\n            this.el_ctx.lineTo(x + radius, y);\n        } else {\n            this.el_ctx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Draw a canvas.\n     * @param {string} elementId\n     * @param {string} zoneId\n     * @private\n     */\n    _createCanvasWrapper(elementId, zoneId) {\n\n        let _zone = document.createElement('div');\n        _zone.id = zoneId;\n        _zone.className = \"zone\";\n\n        let _canvas = document.createElement('canvas');\n        _canvas.id = elementId;\n        _canvas.className = \"zone--canvas\";\n        _canvas.width = this.width;\n        _canvas.height = this.height;\n        _canvas.showStrokes = this.showStrokes;\n\n        _canvas.chamfer = this.chamfer;\n        _canvas.chamferRt = this.chamferRt;\n        _canvas.chamferRb = this.chamferRb;\n        _canvas.chamferLt = this.chamferLt;\n        _canvas.chamferLb = this.chamferLb;\n\n        _canvas.roundBorder = this._roundBorder;\n        _canvas.roundBorderRt = this.roundBorderRt;\n        _canvas.roundBorderRb = this.roundBorderRb;\n        _canvas.roundBorderLt = this.roundBorderLt;\n        _canvas.roundBorderLb = this.roundBorderLb;\n\n        _canvas.backgroundPatternTriangleEven = this.triangleEvenPattern;\n        _canvas.backgroundPatternTriangleOdd = this.triangleOddPattern;\n        _canvas.innerHTML = \"Votre navigateur ne supporte pas canvas.<br>Essayez avec Firefox, Safari, Chrome ou Opera.\";\n\n        setTimeout(() => {\n            this.clearCanvasLayers();\n            if (_zone) {\n                _zone.appendChild(_canvas);\n            }\n        });\n\n        this.wrapper = _zone;\n        this.el_canvas = _canvas;\n        this.el_ctx = this.el_canvas.getContext('2d');\n\n        setTimeout(() => {\n            // Show download link if can download picture is set to true.\n            if (this._canDownload()) {\n                this._createDownloadLink('link-' + this.uniqueId, 'zone-' + this.uniqueId);\n            }\n\n            this._createDetailLink('modal-' + this.uniqueId, 'zone-' + this.uniqueId);\n        });\n\n    }\n\n    /**\n     * Erase a canvas.\n     */\n    clearCanvasLayers() {\n        if (this.el_canvas) {\n            let w = this.el_canvas.clientWidth;\n            let h = this.el_canvas.clientHeight;\n            this.el_ctx.clearRect(0, 0, w, h);\n        }\n    }\n\n    /**\n     * Get filtered patterns.\n     * @returns {Array}\n     */\n    getFiltered() {\n        let filteredFull = [];\n        for (let i = 0; i < this.patterns[this.zone].length; i++) {\n            let pattern = this.patterns[this.zone][i];\n            if (pattern.data) {\n                filteredFull.push(pattern.data);\n            }\n        }\n        return filteredFull;\n    }\n\n    /**\n     * Get filtered patterns object.\n     * @param {string} zone\n     * @returns {Array}\n     */\n    getFilteredPatternsObjects(zone) {\n        let filteredFull = {};\n\n        this.patterns[zone].filter((pattern) => {\n            if (pattern.data) {\n                filteredFull[pattern.title] = pattern.title;\n            }\n            return true;\n        });\n        return filteredFull;\n    }\n\n    /**\n     * Initialize the patterns, we decrement a variable. When it is zero we continue the loading script of the canvas.\n     * @private\n     */\n    _initPatterns() {\n        let filteredPatterns = this.getFiltered();\n\n        if (filteredPatterns && Array.isArray(filteredPatterns)) {\n            let _imagesLoading = filteredPatterns.length;\n\n            filteredPatterns.forEach((pattern) => {\n                if (Array.isArray(pattern)) {\n                    pattern.forEach((ss_pattern) => {\n                        let ss_image = new Image();\n                        let ss_elpattern = this._getFullDecodedPath(ss_pattern);\n                        ss_image.onload = () => {\n                            this.images[ss_elpattern] = ss_image;\n                            this.repeatBackgroundWidth = this.width / ss_image.width;\n                            this.repeatBackgroundHeight = this.height / ss_image.height;\n                        };\n                        ss_image.src = this._encode(ss_elpattern);\n\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPattersLoaded(this._encode(ss_elpattern));\n                        }\n                    });\n\n                    --_imagesLoading;\n                } else {\n                    let image = new Image();\n                    let elpattern = this._getFullDecodedPath(pattern);\n                    image.onload = () => {\n                        this.images[elpattern] = this.el_ctx.createPattern(image, 'repeat');\n                        --_imagesLoading;\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPatternsLoaded(this._encode(elpattern));\n                        }\n                    };\n                    image.src = this._encode(elpattern);\n                }\n\n            });\n        }\n    }\n\n    /**\n     * Create a link to show detail.\n     * @param {number} uniqueId\n     * @private\n     */\n    _createDetailLink(uniqueId, zoneId) {\n\n        let _zone = document.getElementById(zoneId);\n        let _link = document.createElement('button');\n        _link.type = \"button\";\n        _link.className = \"btn btn-primary btn-sm\";\n        _link.innerText = 'Modify';\n        _link.addEventListener('click', () => {\n            $('#' + uniqueId).modal('toggle');\n        }, false);\n        if (_zone) {\n            _zone.insertBefore(_link, _zone.firstChild);\n        }\n    }\n\n    /**\n     * Create a link to download an image of the canvas.\n     * @param {number} uniqueId\n     * @private\n     */\n    _createDownloadLink(uniqueId, zoneId) {\n        let _zone = document.getElementById(zoneId);\n        let _link = document.createElement('a');\n\n        _link.innerHTML = 'Download';\n        _link.classList = \"btn btn-dark btn-sm\";\n        _link.id = uniqueId;\n        _link.href = \"#\";\n        _link.role = \"button\";\n        _link.addEventListener('click', () => {\n            _link.href = this.el_canvas.toDataURL('image/jpeg');\n            _link.download = \"bookmark.jpg\";\n        }, false);\n\n        if (_zone) {\n            _zone.insertBefore(_link, _zone.firstChild);\n        }\n    }\n\n    /**\n     * Create a textarea that expose the json content related to this.\n     */\n    _createParamDebugZone() {\n        let params = document.createElement('textarea');\n        params.cols = 80;\n        params.rows = 10;\n        params.readOnly = true;\n        params.innerHTML = JSON.stringify(this);\n    }\n\n    /**\n     * Draw Background.\n     * @private\n     */\n    _drawBackgroundPattern() {\n        this._setBackgroundPatterns(this.backgroundPattern);\n    }\n\n    /**\n     * Apply a pattern to a context of a canvas.\n     * @param {Object.<CanvasPattern>} style\n     * @private\n     */\n    _applyStyle(style) {\n        this.el_ctx.fillStyle = style;\n    }\n\n    /**\n     * Draw a single even or odd triangle.\n     * @param {boolean} isEven\n     * @private\n     */\n    _drawSingleTriangle(isEven) {\n        let pattern;\n        this.patterns.triangles.map((b) => {\n            if (b.title === ((isEven === true) ? this.el_canvas.backgroundPatternTriangleEven : this.el_canvas.backgroundPatternTriangleOdd)) {\n                pattern = b.data;\n            }\n        });\n\n        this._applyStyle(this.images[this._getFullDecodedPath(pattern)]);\n\n        //log('Render a ' + (isEven ? 'even' : 'odd') + ' triangle with ' + pattern);\n\n        if (isEven) {\n            this.el_ctx.lineTo(this._column_width + this._offset, this._first_coef);\n            this.el_ctx.lineTo(this._offset, this._first_coef);\n        } else {\n            this.el_ctx.lineTo(this._column_width + this._offset, this._second_coef);\n            this.el_ctx.lineTo(this._offset, this._second_coef);\n        }\n    }\n\n    /**\n     * Draw the pairs of triangles.\n     * @private\n     */\n    _drawTriangles() {\n        if (this._hasChamfer()) {\n            this.el_ctx.clip();\n        }\n\n        let _triangle_height;\n        this._column_width = this.el_canvas.width / this.columnsPerWidth;\n        let _half_width = this._column_width / 2;\n\n        // Draw each triangle pair.\n        for (let j = 1; j <= this.numberOfPairOfTriangles; j++) {\n\n            // Draw each column.\n            for (let l = 0; l < this.columnsPerWidth; l++) {\n\n                // Thickness of cut lines.\n                this.el_ctx.lineWidth = LINE_WIDTH;\n\n                // The offset between each column.\n                this._offset = l * this._column_width;\n\n                _triangle_height = this.el_canvas.height / (this.numberOfPairOfTriangles * 2);\n\n                // Move these coef might glitch everything.\n                this._first_coef = 2 * (_triangle_height * j - _triangle_height);\n                this._second_coef = this._first_coef + (2 * _triangle_height);\n                this._third_coef = ((this._second_coef - _triangle_height) / j) * j;\n\n                // Draw a pair of triangles.\n                for (let k = 1; k <= 2; k++) {\n                    this.el_ctx.beginPath();\n                    this.el_ctx.moveTo(_half_width + this._offset, this._third_coef);\n\n                    // Draw a triangle with the base at the top or at the bottom.\n                    if (k % 2 === 1) {\n                        this._drawSingleTriangle(true);\n                    } else {\n                        this._drawSingleTriangle(false);\n                    }\n\n                    this.el_ctx.closePath();\n                    this._drawStrokes();\n                    this.el_ctx.fill();\n                }\n            }\n        }\n\n        if (this._hasChamfer()) {\n            this.el_ctx.restore();\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDownload() {\n        return this.canDownload === true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDrawTriangle() {\n        return this.enableTriangles === true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDisplayStrokes() {\n        return this.el_canvas.showStrokes === true;\n    }\n\n    /**\n     * Draw strokes or not.\n     * @private\n     */\n    _drawStrokes() {\n        // If show strokes flag is on.\n        if (this._canDisplayStrokes()) {\n            this.el_ctx.strokeStyle = STROKE_COLOR;\n            this.el_ctx.stroke();\n        }\n    }\n\n    /**\n     * Render the bookmark.\n     */\n    render() {\n        setTimeout(() => {\n            this._drawBackgroundPattern();\n            if (this._canDrawTriangle()) {\n                this._drawTriangles();\n            }\n        }, 100);\n    }\n\n    /**\n     * Function called when all images are loaded.\n     * @param {string} loadedPattern\n     * @private\n     */\n    _triggeredOnPatternsLoaded(loadedPattern) {\n        this.clearCanvasLayers();\n        this.render();\n    }\n}"],"sourceRoot":""}