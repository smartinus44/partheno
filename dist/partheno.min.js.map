{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./src/Bookmark.class.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","instance","TypeError","obj","default","BookMark","_uniqueId","_height","_width","_background","_numberOfpairs","_enableTriangles","_evenPattern","_oddPattern","_showStrokes","_columns_per_width","_can_download","_patterns","_chamfer","_chamferRt","_chamferRb","_chamferLt","_chamferLb","_classCallCheck2","this","uniqueId","images","numberOfPairOfTriangles","patterns","height","width","chamferRt","chamferRb","chamferLt","chamferLb","enableTriangles","triangleEvenPattern","_getRandomPattern","triangleOddPattern","showStrokes","columnsPerWidth","canDownload","chamfer","backgroundPattern","_init","_createCanvas","el_ctx","el_canvas","getContext","_createDownloadLink","zone","_initPatterns","result","Math","floor","random","_getFullPath","data","path","btoa","searchedPattern","pattern","background","map","b","title","_hasChamfer","_chamferedRect","Array","isArray","_buidMirroredPattern","_applyStyle","fill","_findPattern","fillRect","_this","strokeRect","pow","parseFloat","forEach","index","currentImage","drawImage","x","y","w","h","radius","rt","lt","rb","lb","beginPath","strokeStyle","lineWidth","moveTo","lineTo","quadraticCurveTo","stroke","elementId","zoneId","_this2","document","getElementById","_canvas","createElement","wrapper","id","backgroundPatternTriangleEven","backgroundPatternTriangleOdd","innerHTML","setTimeout","clearCanvasLayers","appendChild","clientWidth","clientHeight","clearRect","filteredFull","push","filter","_this3","filteredPatterns","getFiltered","_imagesLoading","ss_pattern","ss_image","Image","ss_elpattern","onload","repeatBackgroundWidth","repeatBackgroundHeight","src","atob","_triggeredOnPattersLoaded","image","elpattern","createPattern","_triggeredOnPatternsLoaded","_this4","_zone","_link","className","href","role","style","position","addEventListener","toDataURL","download","insertBefore","firstChild","params","cols","rows","readOnly","JSON","stringify","_setBackgroundPatterns","fillStyle","isEven","_this5","triangles","_column_width","_offset","_first_coef","_second_coef","_triangle_height","clip","_half_width","j","_third_coef","k","_drawSingleTriangle","closePath","_drawStrokes","restore","_this6","_drawBackground","_drawTriangles","loadedPattern","render"],"mappings":"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","file":"partheno.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","'use strict';\n\nconst STROKE_COLOR = \"#FF0000\";\nconst LINE_WIDTH = 1;\nconst DEBUG = true; // Enable logging\n\nconst log = () => {\n    if (DEBUG) {\n        console.log.apply(console, arguments);\n    }\n};\n\n// Initialization of a bookmark.\nexport default class BookMark {\n\n    /**\n     * Constructor.\n     * @param {number} _uniqueId\n     * @param {number} _height\n     * @param {number} _width\n     * @param {string}_background\n     * @param {number} _numberOfpairs\n     * @param {boolean} _enableTriangles\n     * @param {string} _evenPattern\n     * @param {string}_oddPattern\n     * @param {boolean} _showStrokes\n     * @param {number} _columns_per_width\n     * @param {boolean} _can_download\n     * @param {Object} _patterns\n     * @param {number} _chamfer\n     * @param {boolean} _chamferRt\n     * @param {boolean}  _chamferRb\n     * @param {boolean}  _chamferLt\n     * @param {boolean}  _chamferLb\n     * @returns {BookMark}\n     */\n    constructor(_uniqueId, _height, _width, _background, _numberOfpairs, _enableTriangles, _evenPattern,\n        _oddPattern, _showStrokes, _columns_per_width, _can_download, _patterns, _chamfer, _chamferRt,\n        _chamferRb, _chamferLt, _chamferLb) {\n\n        // Work with textures.\n        this.uniqueId = _uniqueId;\n        this.images = [];\n        this.numberOfPairOfTriangles = 3;\n        this.patterns = _patterns;\n        this.height = _height;\n        this.width = _width;\n        this.chamferRt = _chamferRt;\n        this.chamferRb = _chamferRb;\n        this.chamferLt = _chamferLt;\n        this.chamferLb = _chamferLb;\n        this.enableTriangles = _enableTriangles;\n\n        if (!_evenPattern) {\n            this.triangleEvenPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleEvenPattern = _evenPattern;\n        }\n        if (!_oddPattern) {\n            this.triangleOddPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleOddPattern = _oddPattern;\n        }\n        this.numberOfPairOfTriangles = _numberOfpairs;\n        this.showStrokes = _showStrokes;\n        this.columnsPerWidth = _columns_per_width;\n        this.canDownload = _can_download;\n        this.chamfer = _chamfer;\n        this.backgroundPattern = _background;\n\n        this._init();\n    }\n\n    /**\n     * First init canvas and ctx.\n     * @private\n     */\n    _init() {\n        this._createCanvas('canva-' + this.uniqueId, 'zone-' + this.uniqueId);\n        this.el_ctx = this.el_canvas.getContext('2d');\n\n        // Show download link if can download picture is set to true.\n        if (this.canDownload === true) {\n            this._createDownloadLink(this.uniqueId);\n        }\n\n        this.zone = 'background';\n        this._initPatterns();\n        this.zone = 'triangles';\n        this._initPatterns();\n    }\n\n    /**\n     * Randomly returns a pattern.\n     * @param {string} zone\n     * @returns {string|null}\n     * @private\n     */\n    _getRandomPattern(zone) {\n        let result, value;\n        if (typeof this.patterns[zone] !== 'undefined') {\n            value = Math.floor(Math.random() * this.patterns[zone].length);\n            result = this._getFullPath(this.patterns[zone][value].data);\n        }\n        return result;\n    }\n\n    /**\n     * Return true if only one chamfer is enabled.\n     * @returns {boolean}\n     * @private\n     */\n    _hasChamfer() {\n        return (this.chamferRt || this.chamferRb || this.chamferLt || this.chamferLb);\n    }\n\n    /**\n     * Return clean full path of a pattern.\n     * @param {string} path\n     * @returns {string}\n     * @private\n     */\n    _getFullPath(path) {\n        return btoa(this.patterns.path + path);\n    }\n\n    /**\n     * Find a pattern in a list of patterns.\n     * @param {string} searchedPattern\n     * @return {string}\n     * @private\n     */\n    _findPattern(searchedPattern) {\n        let pattern;\n        this.patterns.background.map((b) => {\n            if (b.title === searchedPattern) {\n                pattern = b.data;\n            }\n        });\n        return pattern;\n    }\n\n    /**\n     * Initialize the background.\n     * @param {string|Array} backgroundPattern\n     * @private\n     */\n    _setBackgroundPatterns(backgroundPattern) {\n        if (this._hasChamfer()) {\n            this._chamferedRect(\n                0,\n                0,\n                this.el_canvas.width,\n                this.el_canvas.height,\n                this.chamfer,\n                this.chamferRt,\n                this.chamferRb,\n                this.chamferLt,\n                this.chamferLb\n            );\n\n            // If the pattern is compouned of a couple of faces.\n            if (Array.isArray(backgroundPattern)) {\n                this._buidMirroredPattern(backgroundPattern);\n            } else {\n                this._applyStyle(this.images[backgroundPattern]);\n            }\n            this.el_ctx.fill();\n        } else {\n            let pattern = this._findPattern(backgroundPattern);\n\n            // Patterns could be stored in an array or in a single string because of mirrored patterns.\n            if (Array.isArray(pattern)) {\n                this._buidMirroredPattern(pattern);\n                this.el_ctx.fill();\n            } else {\n                this._applyStyle(this.images[this._getFullPath(pattern)]);\n                this.el_ctx.fillRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n            }\n        }\n    }\n\n    /**\n     * Build a mirrored background pattern.\n     * @param {Object} patterns\n     * @private\n     */\n    _buidMirroredPattern(patterns) {\n        // Black background\n        this.el_ctx.strokeRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n\n        let pow = parseFloat(this.el_canvas.width / 2);\n        let width = this.width;\n        let height = this.height;\n\n        patterns.forEach((pattern, index) => {\n            let currentImage = this.images[this._getFullPath(pattern)];\n            if (currentImage) {\n                // Top left.\n                if (index === 0) {\n                    this.el_ctx.drawImage(currentImage, 0, 0, width, height);\n                }\n                // Top right.\n                if (index === 1) {\n                    this.el_ctx.drawImage(currentImage, pow, 0, width, height);\n                }\n                // Bottom left.\n                if (index === 2) {\n                    this.el_ctx.drawImage(currentImage, 0, 200, width, height);\n                }\n                // Bottom right.\n                if (index === 3) {\n                    this.el_ctx.drawImage(currentImage, pow, 200, width, height);\n                }\n            }\n        });\n    }\n\n    /**\n     * Build a rounded background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _roundRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n        this.el_ctx.beginPath();\n        this.el_ctx.strokeStyle = \"green\";\n        this.el_ctx.lineWidth = \"2\";\n\n        if (rt) {\n            if (lt) {\n                this.el_ctx.moveTo(x, y);\n            } else {\n                this.el_ctx.moveTo(x + radius, y);\n            }\n\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.quadraticCurveTo(r, y, r, y + radius);\n        } else {\n            if (lb) {\n\n                this.el_ctx.moveTo(x + radius, y);\n            } else {\n                this.el_ctx.moveTo(x, y);\n\n            }\n            this.el_ctx.lineTo(r, y);\n        }\n\n        if (rb) {\n            this.el_ctx.lineTo(r, y + h - radius);\n            this.el_ctx.quadraticCurveTo(r, b, r - radius, b);\n        } else {\n            this.el_ctx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.el_ctx.lineTo(x + radius, b);\n            this.el_ctx.quadraticCurveTo(x, b, x, b - radius);\n        } else {\n            this.el_ctx.lineTo(x, b);\n        }\n\n        if (lb) {\n            this.el_ctx.lineTo(x, y + radius);\n            this.el_ctx.quadraticCurveTo(x, y, x + radius, y);\n        } else {\n            this.el_ctx.lineTo(x, y);\n        }\n        this.el_ctx.stroke();\n    }\n\n    /**\n     * Build a chamfered background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _chamferedRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n\n        this.el_ctx.moveTo(x + radius, y);\n\n        if (rt) {\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.lineTo(r, y + radius);\n        } else {\n            this.el_ctx.lineTo(r - radius, y);\n            this.el_ctx.lineTo(r, y);\n        }\n\n        if (lb) {\n            this.el_ctx.lineTo(r, y + h - radius);\n            this.el_ctx.lineTo(r - radius, b);\n        } else {\n            this.el_ctx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.el_ctx.lineTo(x + radius, b);\n            this.el_ctx.lineTo(x, b - radius);\n        } else {\n            this.el_ctx.lineTo(x, b);\n        }\n\n        if (rb) {\n            this.el_ctx.lineTo(x, y + radius);\n            this.el_ctx.lineTo(x + radius, y);\n        } else {\n            this.el_ctx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Draw a canvas.\n     * @param {string} elementId\n     * @param {string} zoneId\n     * @private\n     */\n    _createCanvas(elementId, zoneId) {\n        let zone = document.getElementById(zoneId);\n        let _canvas = document.createElement('canvas');\n        let wrapper = document.createElement('div');\n        wrapper.id = elementId;\n        _canvas.width = this.width;\n        _canvas.height = this.height;\n        _canvas.showStrokes = this.showStrokes;\n        _canvas.chamfer = this.chamfer;\n        _canvas.chamferRt = this.chamferRt;\n        _canvas.chamferRb = this.chamferRb;\n        _canvas.chamferLt = this.chamferLt;\n        _canvas.chamferLb = this.chamferLb;\n        _canvas.backgroundPatternTriangleEven = this.triangleEvenPattern;\n        _canvas.backgroundPatternTriangleOdd = this.triangleOddPattern;\n        _canvas.innerHTML = \"Votre navigateur ne supporte pas canvas.<br>Essayez avec Firefox, Safari, Chrome ou Opera.\";\n        setTimeout(() => {\n            this.clearCanvasLayers();\n            if (zone) {\n                wrapper.appendChild(_canvas);\n                zone.appendChild(wrapper);\n            }\n        });\n        this.el_canvas = _canvas;\n    }\n\n    /**\n     * Erase a canvas.\n     */\n    clearCanvasLayers() {\n        if (this.el_canvas) {\n            let w = this.el_canvas.clientWidth;\n            let h = this.el_canvas.clientHeight;\n            this.el_ctx.clearRect(0, 0, w, h);\n        }\n    }\n\n    /**\n     * Get filtered patterns.\n     * @returns {Array}\n     */\n    getFiltered() {\n        let filteredFull = [];\n        for (let i = 0; i < this.patterns[this.zone].length; i++) {\n            let pattern = this.patterns[this.zone][i];\n            if (pattern.data) {\n                filteredFull.push(pattern.data);\n            }\n        }\n        return filteredFull;\n    }\n\n    /**\n     * Get filtered patterns object.\n     * @param {string} zone\n     * @returns {Array}\n     */\n    getFilteredPatternsObjects(zone) {\n        let filteredFull = {};\n\n        this.patterns[zone].filter((pattern) => {\n            if (pattern.data) {\n                filteredFull[pattern.title] = pattern.title;\n            }\n            return true;\n        });\n        return filteredFull;\n    }\n\n    /**\n     * Initialize the patterns, we decrement a variable. When it is zero we continue the loading script of the canvas.\n     * @private\n     */\n    _initPatterns() {\n        let filteredPatterns = this.getFiltered();\n\n        if (filteredPatterns && Array.isArray(filteredPatterns)) {\n            let _imagesLoading = filteredPatterns.length;\n\n            filteredPatterns.forEach((pattern) => {\n                if (Array.isArray(pattern)) {\n                    pattern.forEach((ss_pattern) => {\n                        let ss_image = new Image();\n                        let ss_elpattern = this._getFullPath(ss_pattern);\n                        ss_image.onload = () => {\n                            this.images[ss_elpattern] = ss_image;\n                            this.repeatBackgroundWidth = this.width / ss_image.width;\n                            this.repeatBackgroundHeight = this.height / ss_image.height;\n                        };\n                        ss_image.src = atob(ss_elpattern);\n\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPattersLoaded(atob(ss_elpattern));\n                        }\n                    });\n\n                    --_imagesLoading;\n                    //log(_imagesLoading + ' ' + this.zone + ' pattern(s) still loading');\n                } else {\n                    let image = new Image();\n                    let elpattern = this._getFullPath(pattern);\n                    image.onload = () => {\n                        this.images[elpattern] = this.el_ctx.createPattern(image, 'repeat');\n                        --_imagesLoading;\n                        //log(_imagesLoading + ' ' + this.zone + ' pattern(s) still loading');\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPatternsLoaded(atob(elpattern));\n                        }\n                    };\n                    image.src = atob(elpattern);\n                }\n\n            });\n        }\n    }\n\n    /**\n     * Create a link to download an image of the canvas.\n     * @param {number} uniqueId\n     * @private\n     */\n    _createDownloadLink(uniqueId) {\n        let _zone = document.getElementById(\"canva-\" + uniqueId);\n        let _link = document.createElement('a');\n\n        _link.innerHTML = 'Download this picture';\n        _link.className = \"btn btn-dark\";\n        _link.href = \"#\";\n        _link.role = \"button\";\n        _link.style.position = \"absolute\";\n        _link.addEventListener('click', () => {\n            _link.href = this.el_canvas.toDataURL();\n            _link.download = \"bookmark.jpg\";\n        }, false);\n\n        if (_zone) {\n            _zone.insertBefore(_link, _zone.firstChild);\n        }\n\n        let params = document.createElement('textarea');\n        params.cols = 80;\n        params.rows = 10;\n        params.readOnly = true;\n        params.innerHTML = JSON.stringify(this);\n    }\n\n    /**\n     * Draw Background.\n     * @private\n     */\n    _drawBackground() {\n        this._setBackgroundPatterns(this.backgroundPattern);\n    }\n\n    /**\n     * Apply a pattern to a context of a canvas.\n     * @param {Object.<CanvasPattern>} style\n     * @private\n     */\n    _applyStyle(style) {\n        this.el_ctx.fillStyle = style;\n    }\n\n    /**\n     * Draw a single even or odd triangle.\n     * @param {boolean} isEven\n     * @private\n     */\n    _drawSingleTriangle(isEven) {\n        let pattern;\n        this.patterns.triangles.map((b) => {\n            if (b.title === ((isEven === true) ? this.el_canvas.backgroundPatternTriangleEven : this.el_canvas.backgroundPatternTriangleOdd)) {\n                pattern = b.data;\n            }\n        });\n\n        this._applyStyle(this.images[this._getFullPath(pattern)]);\n\n        //log('Render a ' + (isEven ? 'even' : 'odd') + ' triangle with ' + pattern);\n\n        if (isEven) {\n            this.el_ctx.lineTo(this._column_width + this._offset, this._first_coef);\n            this.el_ctx.lineTo(this._offset, this._first_coef);\n        } else {\n            this.el_ctx.lineTo(this._column_width + this._offset, this._second_coef);\n            this.el_ctx.lineTo(this._offset, this._second_coef);\n        }\n    }\n\n    /**\n     * Draw the pairs of triangles.\n     * @private\n     */\n    _drawTriangles() {\n        if (this._hasChamfer()) {\n            this.el_ctx.clip();\n        }\n\n        let _triangle_height;\n        this._column_width = this.el_canvas.width / this.columnsPerWidth;\n        let _half_width = this._column_width / 2;\n\n        // Draw each triangle pair.\n        for (let j = 1; j <= this.numberOfPairOfTriangles; j++) {\n\n            // Draw each column.\n            for (let l = 0; l < this.columnsPerWidth; l++) {\n\n                _triangle_height = this.el_canvas.height / (this.numberOfPairOfTriangles * 2);\n\n                // Thickness of cut lines.\n                this.el_ctx.lineWidth = LINE_WIDTH;\n\n                // The offset between each column.\n                this._offset = l * this._column_width;\n                this._first_coef = 2 * (_triangle_height * j - _triangle_height);\n                this._second_coef = this._first_coef + (2 * _triangle_height);\n                this._third_coef = ((this._second_coef - _triangle_height) / j) * j;\n\n                // Draw a pair of triangles.\n                for (let k = 1; k <= 2; k++) {\n                    this.el_ctx.beginPath();\n\n                    this.el_ctx.moveTo(_half_width + this._offset, this._third_coef);\n\n                    // Draw a triangle with the base at the top or at the bottom.\n                    if (k % 2 === 1) {\n                        this._drawSingleTriangle(true);\n                    } else {\n                        this._drawSingleTriangle(false);\n                    }\n\n                    this.el_ctx.closePath();\n\n                    this._drawStrokes();\n\n                    this.el_ctx.fill();\n                }\n            }\n        }\n\n        if (this._hasChamfer()) {\n            this.el_ctx.restore();\n        }\n    }\n\n    /**\n     * Draw strokes or not.\n     * @private\n     */\n    _drawStrokes() {\n        // If show strokes flag is on.\n        if (this.el_canvas.showStrokes === true) {\n            this.el_ctx.strokeStyle = STROKE_COLOR;\n            this.el_ctx.stroke();\n        }\n    }\n\n    /**\n     * Render the bookmark.\n     */\n    render() {\n        setTimeout(() => {\n            this._drawBackground();\n\n            if (this.enableTriangles) {\n                this._drawTriangles();\n            }\n        }, 100);\n    }\n\n    /**\n     * Function called when all images are loaded.\n     * @param {string} loadedPattern\n     * @private\n     */\n    _triggeredOnPatternsLoaded(loadedPattern) {\n\n        this.clearCanvasLayers();\n        this.render();\n    }\n}"],"sourceRoot":""}