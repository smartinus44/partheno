{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./src/Bookmark.class.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","obj","default","_defineProperties","target","props","length","descriptor","writable","key","Constructor","protoProps","staticProps","instance","TypeError","BookMark","build","_classCallCheck2","this","uniqueId","patterns","height","width","chamfer","chamferWidth","chamferRt","chamferRb","chamferLt","chamferLb","roundBorder","roundBorderWidth","roundBorderRt","roundBorderRb","roundBorderLt","roundBorderLb","enableTriangles","numberOfPairOfTriangles","numberOfpairs","showStrokes","columnsPerWidth","canDownload","backgroundPattern","background","evenPattern","triangleEvenPattern","_getRandomPattern","oddPattern","triangleOddPattern","images","wrapper","_init","_createCanvasWrapper","zone","_initPatterns","result","Math","floor","random","_getFullDecodedPath","data","_roundBorderRt","_roundBorderRb","_roundBorderLt","_roundBorderLb","path","Buffer","from","toString","stringPattern","searchedPattern","pattern","map","elem","title","_hasChamfer","_drawChamferedRect","el_canvas","Array","isArray","_buidMirroredPattern","_applyStyle","elCtx","fill","_findPattern","fillRect","_this","strokeRect","pow","parseFloat","forEach","index","currentImage","drawImage","x","y","w","h","radius","rt","lt","rb","lb","b","beginPath","strokeStyle","lineWidth","moveTo","lineTo","quadraticCurveTo","stroke","elementId","zoneId","_this2","_zone","document","createElement","id","className","_canvas","_roundBorder","backgroundPatternTriangleEven","backgroundPatternTriangleOdd","innerHTML","setTimeout","clearCanvasLayers","appendChild","getContext","_canDownload","_createDownloadLink","clientWidth","clientHeight","clearRect","filteredFull","push","filter","_this3","filteredPatterns","getFiltered","_imagesLoading","ss_pattern","ss_image","Image","ss_elpattern","onload","repeatBackgroundWidth","repeatBackgroundHeight","src","_encode","_triggeredOnPattersLoaded","image","elpattern","createPattern","_triggeredOnPatternsLoaded","_this4","classes","arguments","undefined","getElementById","_link","classList","href","role","addEventListener","toDataURL","download","insertBefore","firstChild","_setBackgroundPatterns","style","fillStyle","isEven","_this5","triangles","_column_width","_offset","_first_coef","_second_coef","_triangle_height","clip","_half_width","j","_third_coef","k","_drawSingleTriangle","closePath","_drawStrokes","restore","_canDisplayStrokes","_this6","_drawBackgroundPattern","_canDrawTriangle","_drawTriangles","loadedPattern","render","Builder","_createClass2","g","Function","eval","e","window","arr","read","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","write","abs","isNaN","log","LN2","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","code","Error","indexOf","start","end","num","output","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","slice","fromString","isBuffer","checked","copy","val","type","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","allocUnsafeSlow","_isBuffer","compare","a","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","trim","replace","stringtrim","base64clean","dst"],"mappings":"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","file":"partheno.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","'use strict';\n/*global window */\n\nconst STROKE_COLOR = \"#FF0000\";\nconst LINE_WIDTH = 1;\nconst DEBUG = true; // Enable logging\nconst TIMEOUT = 100;\n\nconst log = (elem) => {\n    if (DEBUG) {\n        console.log(elem);\n    }\n};\n\n// Initialization of a bookmark.\nexport default class BookMark {\n\n    /**\n     * Constructor.\n     * @param {number} _uniqueId\n     * @returns {BookMark}\n     */\n    constructor(build) {\n\n        this.uniqueId = build.uniqueId;\n        this.patterns = build.patterns;\n        this.height = build.height;\n        this.width = build.width;\n        this.chamfer = build.chamferWidth;\n        this.chamferRt = build.chamferRt;\n        this.chamferRb = build.chamferRb;\n        this.chamferLt = build.chamferLt;\n        this.chamferLb = build.chamferLb;\n        this.roundBorder = build.roundBorderWidth;\n        this.roundBorderRt = build.roundBorderRt;\n        this.roundBorderRb = build.roundBorderRb;\n        this.roundBorderLt = build.roundBorderLt;\n        this.roundBorderLb = build.roundBorderLb;\n        this.enableTriangles = build.enableTriangles;\n        this.numberOfPairOfTriangles = build.numberOfpairs;\n        this.showStrokes = build.showStrokes;\n        this.columnsPerWidth = build.columnsPerWidth;\n        this.canDownload = build.canDownload;\n        this.backgroundPattern = build.background;\n\n        if (!build.evenPattern) {\n            this.triangleEvenPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleEvenPattern = build.evenPattern;\n        }\n\n        if (!build.oddPattern) {\n            this.triangleOddPattern = this._getRandomPattern('triangles');\n        } else {\n            this.triangleOddPattern = build.oddPattern;\n        }\n\n        this.images = [];\n        this.wrapper = null;\n\n        this._init();\n    }\n\n    static get Builder() {\n        class Builder {\n            /**\n             * @param {number} uniqueId \n             */\n            constructor(uniqueId) {\n                    this.uniqueId = uniqueId;\n                }\n                /**\n                 * @param {number} height \n                 * @param {number} width \n                 */\n            sized(height, width) {\n                    this.height = height;\n                    this.width = width;\n                    return this;\n                }\n                /**\n                 * @param {number} columnsPerWidth \n                 */\n            columnsPerWidth(columnsPerWidth) {\n                    this.columnsPerWidth = columnsPerWidth;\n                    return this;\n                }\n                /**\n                 * @param {boolean} canDownload \n                 */\n            downloadable(canDownload) {\n                    this.canDownload = canDownload;\n                    return this;\n                }\n                /**\n                 * @param {boolean} canDownload \n                 */\n            withStrokes(showStrokes) {\n                    this.showStrokes = showStrokes;\n                    return this;\n                }\n                /**\n                 * @param {string} background \n                 */\n            withBackground(background) {\n                    this.background = background;\n                    return this;\n                }\n                /**\n                 * @param {number} numberOfpairs \n                 */\n            withNumberOfPairs(numberOfpairs) {\n                    this.numberOfpairs = numberOfpairs;\n                    return this;\n                }\n                /**\n                 * @param {number} numberOfpairs \n                 */\n            withTriangles(enableTriangles) {\n                    this.enableTriangles = enableTriangles;\n                    return this;\n                }\n                /**\n                 * @param {Object} patterns \n                 * @param {string} evenPattern \n                 * @param {string} oddPattern \n                 */\n            withPatterns(patterns, evenPattern, oddPattern) {\n                    this.patterns = patterns;\n                    this.evenPattern = evenPattern;\n                    this.oddPattern = oddPattern;\n                    return this;\n                }\n                /**\n                 * @param {number} chamferWidth \n                 * @param {boolean} chamferRt \n                 * @param {boolean} chamferRb \n                 * @param {boolean} chamferLt \n                 * @param {boolean} chamferLb \n                 */\n            withChamfers(chamferWidth, chamferRt, chamferRb, chamferLt, chamferLb) {\n                    this.chamferWidth = chamferWidth;\n                    this.chamferRt = chamferRt;\n                    this.chamferRb = chamferRb;\n                    this.chamferLt = chamferLt;\n                    this.chamferLb = chamferLb;\n                    return this;\n                }\n                /**\n                 * @param {number} roundBorderWidth \n                 * @param {boolean} roundBorderRt \n                 * @param {boolean} roundBorderRb \n                 * @param {boolean} roundBorderLt \n                 * @param {boolean} roundBorderLb \n                 */\n            withRoundBorder(roundBorderWidth, roundBorderRt, roundBorderRb, roundBorderLt, roundBorderLb) {\n                this.roundBorderWidth = roundBorderWidth;\n                this.roundBorderRt = roundBorderRt;\n                this.roundBorderRb = roundBorderRb;\n                this.roundBorderLt = roundBorderLt;\n                this.roundBorderLb = roundBorderLb;\n                return this;\n            }\n\n            build() {\n                return new BookMark(this);\n            }\n        }\n        return Builder;\n    }\n\n    /**\n     * First init canvas and ctx.\n     * @private\n     */\n    _init() {\n        this._createCanvasWrapper('canva-' + this.uniqueId, 'zone-' + this.uniqueId);\n        this.zone = 'background';\n        this._initPatterns();\n        this.zone = 'triangles';\n        this._initPatterns();\n    }\n\n    /**\n     * Randomly returns a pattern.\n     * @param {string} zone\n     * @returns {string|null}\n     * @private\n     */\n    _getRandomPattern(zone) {\n        let result, value;\n        if (typeof this.patterns[zone] !== 'undefined') {\n            value = Math.floor(Math.random() * this.patterns[zone].length);\n            result = this._getFullDecodedPath(this.patterns[zone][value].data);\n        }\n        return result;\n    }\n\n    /**\n     * Return true if at least one chamfer is enabled.\n     * @returns {boolean}\n     * @private\n     */\n    _hasChamfer() {\n        return (this.chamferRt || this.chamferRb || this.chamferLt || this.chamferLb);\n    }\n\n    /**\n     * Return true if at least one round border is enabled.\n     * @returns {boolean}\n     * @private\n     */\n    _hasRoundBorder() {\n        return (this._roundBorderRt || this._roundBorderRb || this._roundBorderLt || this._roundBorderLb);\n    }\n\n    /**\n     * Return clean full path of a pattern.\n     * @param {string} path\n     * @returns {string}\n     * @private\n     */\n    _getFullDecodedPath(path) {\n        return Buffer.from(this.patterns.path + path, 'binary').toString('base64');\n    }\n\n    /**\n     * Encode a string.\n     * @param {string} stringPattern \n     */\n    _encode(stringPattern) {\n        return Buffer.from(stringPattern, 'base64').toString('binary');\n    }\n\n    /**\n     * Find a pattern in a list of patterns.\n     * @param {string} searchedPattern\n     * @return {string}\n     * @private\n     */\n    _findPattern(searchedPattern) {\n        let pattern;\n        this.patterns.background.map((elem) => {\n            if (elem.title === searchedPattern) {\n                pattern = elem.data;\n            }\n        });\n        return pattern;\n    }\n\n    /**\n     * Initialize the background.\n     * @param {string|Array} backgroundPattern\n     * @private\n     */\n    _setBackgroundPatterns(backgroundPattern) {\n        if (this._hasChamfer()) {\n            this._drawChamferedRect(\n                0,\n                0,\n                this.el_canvas.width,\n                this.el_canvas.height,\n                this.chamfer,\n                this.chamferRt,\n                this.chamferRb,\n                this.chamferLt,\n                this.chamferLb\n            );\n\n            // If the pattern is compouned of a couple of faces.\n            if (Array.isArray(backgroundPattern)) {\n                this._buidMirroredPattern(backgroundPattern);\n            } else {\n                this._applyStyle(this.images[backgroundPattern]);\n            }\n            this.elCtx.fill();\n        } else {\n            let pattern = this._findPattern(backgroundPattern);\n\n            // Patterns could be stored in an array or in a single string because of mirrored patterns.\n            if (Array.isArray(pattern)) {\n                this._buidMirroredPattern(pattern);\n                this.elCtx.fill();\n            } else {\n                this._applyStyle(this.images[this._getFullDecodedPath(pattern)]);\n                this.elCtx.fillRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n            }\n        }\n    }\n\n    /**\n     * Build a mirrored background pattern.\n     * @param {Object} patterns\n     * @private\n     */\n    _buidMirroredPattern(patterns) {\n        // Black background\n        this.elCtx.strokeRect(0, 0, this.el_canvas.width, this.el_canvas.height);\n\n        let pow = parseFloat(this.el_canvas.width / 2);\n        let width = this.width;\n        let height = this.height;\n\n        patterns.forEach((pattern, index) => {\n            let currentImage = this.images[this._getFullDecodedPath(pattern)];\n            if (currentImage) {\n                // Top left.\n                if (index === 0) {\n                    this.elCtx.drawImage(currentImage, 0, 0, width, height);\n                }\n                // Top right.\n                if (index === 1) {\n                    this.elCtx.drawImage(currentImage, pow, 0, width, height);\n                }\n                // Bottom left.\n                if (index === 2) {\n                    this.elCtx.drawImage(currentImage, 0, 200, width, height);\n                }\n                // Bottom right.\n                if (index === 3) {\n                    this.elCtx.drawImage(currentImage, pow, 200, width, height);\n                }\n            }\n        });\n    }\n\n    /**\n     * Build a rounded background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _drawRoundedRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n        this.elCtx.beginPath();\n        this.elCtx.strokeStyle = \"green\";\n        this.elCtx.lineWidth = \"2\";\n\n        if (rt) {\n            if (lt) {\n                this.elCtx.moveTo(x, y);\n            } else {\n                this.elCtx.moveTo(x + radius, y);\n            }\n            this.elCtx.lineTo(r - radius, y);\n            this.elCtx.quadraticCurveTo(r, y, r, y + radius);\n        } else {\n            if (lb) {\n                this.elCtx.moveTo(x + radius, y);\n            } else {\n                this.elCtx.moveTo(x, y);\n\n            }\n            this.elCtx.lineTo(r, y);\n        }\n\n        if (rb) {\n            this.elCtx.lineTo(r, y + h - radius);\n            this.elCtx.quadraticCurveTo(r, b, r - radius, b);\n        } else {\n            this.elCtx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.elCtx.lineTo(x + radius, b);\n            this.elCtx.quadraticCurveTo(x, b, x, b - radius);\n        } else {\n            this.elCtx.lineTo(x, b);\n        }\n\n        if (lb) {\n            this.elCtx.lineTo(x, y + radius);\n            this.elCtx.quadraticCurveTo(x, y, x + radius, y);\n        } else {\n            this.elCtx.lineTo(x, y);\n        }\n        this.elCtx.stroke();\n    }\n\n    /**\n     * Build a chamfered background pattern.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     * @param {number} radius\n     * @param {boolean} rt\n     * @param {boolean} lt\n     * @param {boolean} rb\n     * @param {boolean} lb\n     * @private\n     */\n    _drawChamferedRect(x, y, w, h, radius, rt, lt, rb, lb) {\n        let r = x + w;\n        let b = y + h;\n        this.elCtx.moveTo(x + radius, y);\n        if (rt) {\n            this.elCtx.lineTo(r - radius, y);\n            this.elCtx.lineTo(r, y + radius);\n        } else {\n            this.elCtx.lineTo(r - radius, y);\n            this.elCtx.lineTo(r, y);\n        }\n\n        if (lb) {\n            this.elCtx.lineTo(r, y + h - radius);\n            this.elCtx.lineTo(r - radius, b);\n        } else {\n            this.elCtx.lineTo(r, y + h);\n        }\n\n        if (lt) {\n            this.elCtx.lineTo(x + radius, b);\n            this.elCtx.lineTo(x, b - radius);\n        } else {\n            this.elCtx.lineTo(x, b);\n        }\n\n        if (rb) {\n            this.elCtx.lineTo(x, y + radius);\n            this.elCtx.lineTo(x + radius, y);\n        } else {\n            this.elCtx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Draw a canvas.\n     * @param {string} elementId\n     * @param {string} zoneId\n     * @private\n     */\n    _createCanvasWrapper(elementId, zoneId) {\n\n        let _zone = document.createElement('div');\n        _zone.id = zoneId;\n        _zone.className = \"zone\";\n\n        let _canvas = document.createElement('canvas');\n        _canvas.id = elementId;\n        _canvas.className = \"zone--canvas\";\n        _canvas.width = this.width;\n        _canvas.height = this.height;\n        _canvas.showStrokes = this.showStrokes;\n\n        _canvas.chamfer = this.chamfer;\n        _canvas.chamferRt = this.chamferRt;\n        _canvas.chamferRb = this.chamferRb;\n        _canvas.chamferLt = this.chamferLt;\n        _canvas.chamferLb = this.chamferLb;\n\n        _canvas.roundBorder = this._roundBorder;\n        _canvas.roundBorderRt = this.roundBorderRt;\n        _canvas.roundBorderRb = this.roundBorderRb;\n        _canvas.roundBorderLt = this.roundBorderLt;\n        _canvas.roundBorderLb = this.roundBorderLb;\n\n        _canvas.backgroundPatternTriangleEven = this.triangleEvenPattern;\n        _canvas.backgroundPatternTriangleOdd = this.triangleOddPattern;\n        _canvas.innerHTML = \"Votre navigateur ne supporte pas canvas.<br>Essayez avec Firefox, Safari, Chrome ou Opera.\";\n\n        setTimeout(() => {\n            this.clearCanvasLayers();\n            if (_zone) {\n                _zone.appendChild(_canvas);\n            }\n        }, TIMEOUT);\n\n        this.wrapper = _zone;\n        this.el_canvas = _canvas;\n        this.elCtx = this.el_canvas.getContext('2d');\n\n        setTimeout(() => {\n            // Show download link if can download picture is set to true.\n            if (this._canDownload()) {\n                this._createDownloadLink('link-' + this.uniqueId, 'zone-' + this.uniqueId);\n            }\n        });\n\n    }\n\n    /**\n     * Erase a canvas.\n     */\n    clearCanvasLayers() {\n        if (this.el_canvas) {\n            let w = this.el_canvas.clientWidth;\n            let h = this.el_canvas.clientHeight;\n            this.elCtx.clearRect(0, 0, w, h);\n        }\n    }\n\n    /**\n     * Get filtered patterns.\n     * @returns {Array}\n     */\n    getFiltered() {\n        let filteredFull = [];\n        for (let i = 0; i < this.patterns[this.zone].length; i++) {\n            let pattern = this.patterns[this.zone][i];\n            if (pattern.data) {\n                filteredFull.push(pattern.data);\n            }\n        }\n        return filteredFull;\n    }\n\n    /**\n     * Get filtered patterns object.\n     * @param {string} zone\n     * @returns {Array}\n     */\n    getFilteredPatternsObjects(zone) {\n        let filteredFull = {};\n\n        this.patterns[zone].filter((pattern) => {\n            if (pattern.data) {\n                filteredFull[pattern.title] = pattern.title;\n            }\n            return true;\n        });\n        return filteredFull;\n    }\n\n    /**\n     * Initialize the patterns, we decrement a variable. When it is zero we continue the loading script of the canvas.\n     * @private\n     */\n    _initPatterns() {\n        let filteredPatterns = this.getFiltered();\n\n        if (filteredPatterns && Array.isArray(filteredPatterns)) {\n            let _imagesLoading = filteredPatterns.length;\n\n            filteredPatterns.forEach((pattern) => {\n                if (Array.isArray(pattern)) {\n                    pattern.forEach((ss_pattern) => {\n                        let ss_image = new Image();\n                        let ss_elpattern = this._getFullDecodedPath(ss_pattern);\n                        ss_image.onload = () => {\n                            this.images[ss_elpattern] = ss_image;\n                            this.repeatBackgroundWidth = this.width / ss_image.width;\n                            this.repeatBackgroundHeight = this.height / ss_image.height;\n                        };\n                        ss_image.src = this._encode(ss_elpattern);\n\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPattersLoaded(this._encode(ss_elpattern));\n                        }\n                    });\n\n                    --_imagesLoading;\n                } else {\n                    let image = new Image();\n                    let elpattern = this._getFullDecodedPath(pattern);\n                    image.onload = () => {\n                        this.images[elpattern] = this.elCtx.createPattern(image, 'repeat');\n                        --_imagesLoading;\n                        if (_imagesLoading === 0) {\n                            this._triggeredOnPatternsLoaded(this._encode(elpattern));\n                        }\n                    };\n                    image.src = this._encode(elpattern);\n                }\n\n            });\n        }\n    }\n\n    /**\n     * Create a link to download an image of the canvas.\n     * @param {string} uniqueId \n     * @param {string} zoneId \n     * @param {string} classes \n     * @param {string} title \n     */\n    _createDownloadLink(uniqueId, zoneId, classes = 'btn btn-dark btn-sm', title = 'Download') {\n        let _zone = document.getElementById(zoneId);\n        let _link = document.createElement('a');\n\n        _link.innerHTML = title;\n        _link.classList = classes;\n        _link.id = uniqueId;\n        _link.href = \"#\";\n        _link.role = \"button\";\n        _link.addEventListener('click', () => {\n            _link.href = this.el_canvas.toDataURL('image/jpeg');\n            _link.download = \"bookmark.jpg\";\n        }, false);\n\n        if (_zone) {\n            _zone.insertBefore(_link, _zone.firstChild);\n        }\n    }\n\n    /**\n     * Draw Background.\n     * @private\n     */\n    _drawBackgroundPattern() {\n        this._setBackgroundPatterns(this.backgroundPattern);\n    }\n\n    /**\n     * Apply a pattern to a context of a canvas.\n     * @param {Object.<CanvasPattern>} style\n     * @private\n     */\n    _applyStyle(style) {\n        this.elCtx.fillStyle = style;\n    }\n\n    /**\n     * Draw a single even or odd triangle.\n     * @param {boolean} isEven\n     * @private\n     */\n    _drawSingleTriangle(isEven) {\n        let pattern;\n        this.patterns.triangles.map((b) => {\n            if (b.title === ((isEven === true) ? this.el_canvas.backgroundPatternTriangleEven : this.el_canvas.backgroundPatternTriangleOdd)) {\n                pattern = b.data;\n            }\n        });\n\n        this._applyStyle(this.images[this._getFullDecodedPath(pattern)]);\n\n        //log('Render a ' + (isEven ? 'even' : 'odd') + ' triangle with ' + pattern);\n\n        if (isEven) {\n            this.elCtx.lineTo(this._column_width + this._offset, this._first_coef);\n            this.elCtx.lineTo(this._offset, this._first_coef);\n        } else {\n            this.elCtx.lineTo(this._column_width + this._offset, this._second_coef);\n            this.elCtx.lineTo(this._offset, this._second_coef);\n        }\n    }\n\n    /**\n     * Draw the pairs of triangles.\n     * @private\n     */\n    _drawTriangles() {\n        if (this._hasChamfer()) {\n            this.elCtx.clip();\n        }\n\n        let _triangle_height;\n        this._column_width = this.el_canvas.width / this.columnsPerWidth;\n        let _half_width = this._column_width / 2;\n\n        // Draw each triangle pair.\n        for (let j = 1; j <= this.numberOfPairOfTriangles; j++) {\n\n            // Draw each column.\n            for (let l = 0; l < this.columnsPerWidth; l++) {\n\n                // Thickness of cut lines.\n                this.elCtx.lineWidth = LINE_WIDTH;\n\n                // The offset between each column.\n                this._offset = l * this._column_width;\n\n                _triangle_height = this.el_canvas.height / (this.numberOfPairOfTriangles * 2);\n\n                // Move these coef might glitch everything.\n                this._first_coef = 2 * (_triangle_height * j - _triangle_height);\n                this._second_coef = this._first_coef + (2 * _triangle_height);\n                this._third_coef = ((this._second_coef - _triangle_height) / j) * j;\n\n                // Draw a pair of triangles.\n                for (let k = 1; k <= 2; k++) {\n                    this.elCtx.beginPath();\n                    this.elCtx.moveTo(_half_width + this._offset, this._third_coef);\n\n                    // Draw a triangle with the base at the top or at the bottom.\n                    if (k % 2 === 1) {\n                        this._drawSingleTriangle(true);\n                    } else {\n                        this._drawSingleTriangle(false);\n                    }\n\n                    this.elCtx.closePath();\n                    this._drawStrokes();\n                    this.elCtx.fill();\n                }\n            }\n        }\n\n        if (this._hasChamfer()) {\n            this.elCtx.restore();\n        }\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDownload() {\n        return this.canDownload === true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDrawTriangle() {\n        return this.enableTriangles === true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    _canDisplayStrokes() {\n        return this.el_canvas.showStrokes === true;\n    }\n\n    /**\n     * Draw strokes or not.\n     * @private\n     */\n    _drawStrokes() {\n        // If show strokes flag is on.\n        if (this._canDisplayStrokes()) {\n            this.elCtx.strokeStyle = STROKE_COLOR;\n            this.elCtx.stroke();\n        }\n    }\n\n    /**\n     * Render the bookmark.\n     */\n    render() {\n        setTimeout(() => {\n            this._drawBackgroundPattern();\n            if (this._canDrawTriangle()) {\n                this._drawTriangles();\n            }\n        }, TIMEOUT);\n    }\n\n    /**\n     * Function called when all images are loaded.\n     * @param {string} loadedPattern\n     * @private\n     */\n    _triggeredOnPatternsLoaded(loadedPattern) {\n        this.clearCanvasLayers();\n        this.render();\n    }\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"],"sourceRoot":""}